variables:
  # Avoid expensive initialization of dotnet cli, see: https://donovanbrown.com/post/Stop-wasting-time-during-NET-Core-builds
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  isManualBuild: $[eq(variables['Build.Reason'], 'Manual')]
  version: '1.6.0'
  buildConfiguration: 'Release'
  disable.coverage.autogenerate: 'true'
  imageName: 'ubuntu-20.04'

# Use build number format, i.e. 1.6.0-B2010001
name: $(version)-B$(date:yyMM)$(rev:rrr)


resources:
  repositories: 
    - repository: templates
      type: git
      name: OneBranch.Pipelines/GovernedTemplates
      ref: refs/heads/main


extends:
  template: v2/OneBranch.Official.CrossPlat.yml@templates # https://aka.ms/obpipelines/templates
  parameters:
    git:
      fetchDepth: -1
      longpaths: true
    cloudvault: # https://aka.ms/obpipelines/cloudvault
      enabled: false
    globalSdl: # https://aka.ms/obpipelines/sdl
      # tsa:
      #  enabled: false # onebranch publish all sdl results to TSA. If TSA is disabled all SDL tools will forced into 'break' build mode.
      cg:
        failOnAlert: false # disable build breaks due to CG alerts
      # credscan:
      #   suppressionsFile: $(Build.SourcesDirectory)\.config\CredScanSuppressions.json
      policheck:
        break: true # always break the build on policheck issues. You can disable it by setting to 'false'
      armory:
        break: false # the example templates are similar to the quickstart repo - azure compliance rules are not applicable here
      # suppression:
      #   suppressionFile: $(Build.SourcesDirectory)\.gdn\global.gdnsuppress
      #   suppressionSet: default

    stages:
    # - template: Common.yml
    #   parameters:
    #     official: true

    - template: jobs/build.yaml
      parameters:
        vmImage: $(imageName)
        artifact: PSRule
        artifactPath: out/modules/PSRule

    - stage: Signing
      # condition: eq(variables.isManualBuild, true)
      dependsOn: Build
      jobs:
      - template: jobs/signing.yaml

# - stage: Compliance
#   dependsOn:
#     - Signing
#     - Build
#   condition: in(dependencies.Signing.result, 'Succeeded', 'Skipped')
#   variables:
#     signingSucceeded: eq(dependencies.Signing.result, 'Succeeded')
#   jobs:
#     - job: Compliance
#       pool:
#         name: Package ES Standard Build
#         demands: DotNetFramework
#       variables:
#       - group: ESRP
#       steps:
#         - template: steps/releaseCompliance.yaml
#           parameters:
#             ${{ if ne(variables.signingSucceeded, true) }}:
#               artifact: unsigned

  # TODO: Automate release publication by implementing the template steps
  # - stage: Publish
  #   dependsOn:
  #     - Tests
  #     - Signing
  #   jobs:
  #     - deployment: PublishToGitHub
  #       displayName: Publish to GitHub
  #       environment: PSArm release approval
  #       strategy:
  #         runOnce:
  #           deploy:
  #             steps:
  #               - template: templates/steps/download.yaml
  #               - template: templates/steps/publishToGitHub.yaml
  #     - job: PublishToGallery
  #       displayName: Publish to PSGallery
  #       steps:
  #         - template: templates/steps/download.yaml
  #         - template: templates/steps/download.yaml